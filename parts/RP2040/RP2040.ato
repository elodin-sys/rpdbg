from "generics/interfaces.ato" import SWD, USB2, QSPI, Power
from "generics/resistors.ato" import Resistor
from "generics/capacitors.ato" import Capacitor
from "abm8_272_t3/ABM8272T3.ato" import ABM8272T3
from "w25q16jvuxiq/W25Q16JVUXIQ.ato" import W25Q16JVUXIQ

module RP2040:
    mcu = new _RP2040

    # Power
    signal gnd
    power_usb = new Power
    gnd ~ mcu.power_3v3.gnd
    gnd ~ power_usb.gnd
    vbus_det = new VoltageDivider5v0To3v3
    vbus_det.power_5v0 ~ power_usb
    vbus_det.power_3v3.vcc ~ mcu.gpio13

    # SWD
    swd_tc = new TC2030
    swd_tc.swd ~ mcu.swd
    swd_tc.power ~ mcu.power_3v3
    swd_tc.nrst ~ mcu.run

    # USB
    usb2 = new USB2
    usb_dp_r = new Resistor
    usb_dp_r.value = 27ohms +/- 5%
    usb_dp_r.package = "0402"
    usb_dm_r = new Resistor
    usb_dm_r.value = 27ohms +/- 5%
    usb_dm_r.package = "0402"
    usb2.dp ~ usb_dp_r.p2; usb_dp_r.p1 ~ mcu.usb_dp
    usb2.dm ~ usb_dm_r.p1; usb_dm_r.p2 ~ mcu.usb_dm
    usb2.dp.override_net_name = "rp_usb+"
    usb2.dm.override_net_name = "rp_usb-"

    # Oscillator
    osc = new Oscillator
    osc.input ~ mcu.xin
    osc.output ~ mcu.xout
    osc.gnd ~ gnd

    # Flash
    bootsel_pad = new TestPointD1
    flash = new W25Q16JVUXIQ
    cs_pullup_r = new PullupResistor
    cs_pullup_r.power ~ mcu.power_3v3
    cs_pullup_r.io ~ flash.ncs
    bootsel_pad.io ~ flash.ncs
    mcu.power_3v3 ~ flash.power
    mcu.qspi ~ flash.qspi

    # Bypass caps
    vreg_in_cap = new BypassCap1uF
    vreg_out_cap = new BypassCap1uF
    vreg_in_cap.power ~ mcu.power_3v3
    vreg_out_cap.power ~ mcu.power_1v1

    dvdd_cap_1 = new BypassCap100nF
    dvdd_cap_2 = new BypassCap100nF
    dvdd_cap_1.power ~ mcu.power_1v1
    dvdd_cap_2.power ~ mcu.power_1v1

    iovdd_cap_1 = new BypassCap100nF
    iovdd_cap_2 = new BypassCap100nF
    iovdd_cap_3 = new BypassCap100nF
    iovdd_cap_4 = new BypassCap100nF
    iovdd_cap_5 = new BypassCap100nF
    iovdd_cap_6 = new BypassCap100nF
    iovdd_cap_7 = new BypassCap100nF
    iovdd_cap_1.power ~ mcu.power_3v3
    iovdd_cap_2.power ~ mcu.power_3v3
    iovdd_cap_3.power ~ mcu.power_3v3
    iovdd_cap_4.power ~ mcu.power_3v3
    iovdd_cap_5.power ~ mcu.power_3v3
    iovdd_cap_6.power ~ mcu.power_3v3
    iovdd_cap_7.power ~ mcu.power_3v3

    flash_cap = new BypassCap100nF
    flash_cap.power ~ mcu.power_3v3

    # Run
    run_pullup_r = new PullupResistor
    run_pullup_r.power ~ mcu.power_3v3
    run_pullup_r.io ~ mcu.run

    # LEDs
    led_amber_0 = new LEDIndicatorAmber
    led_amber_1 = new LEDIndicatorAmber
    led_amber_2 = new LEDIndicatorAmber
    led_green_0 = new LEDIndicatorGreen
    led_green_1 = new LEDIndicatorGreen
    led_amber_0.gnd ~ gnd
    led_amber_1.gnd ~ gnd
    led_amber_2.gnd ~ gnd
    led_green_0.gnd ~ gnd
    led_green_1.gnd ~ gnd
    led_amber_0.input ~ mcu.gpio12
    led_amber_1.input ~ mcu.gpio14
    led_amber_2.input ~ mcu.gpio15
    led_green_0.input ~ mcu.gpio16
    led_green_1.input ~ mcu.gpio17

component TC2030:
    footprint = "Connector:Tag-Connect_TC2030-IDC-NL_2x03_P1.27mm_Vertical"
    do_not_populate = True

    """Interfaces"""
    swd = new SWD
    power = new Power

    """Signals"""
    signal vcc ~ pin 1
    signal swdio ~ pin 2
    signal nrst ~ pin 3
    signal swclk ~ pin 4
    signal gnd ~ pin 5
    signal swo ~ pin 6

    # SWD interface connections
    swd.swdio ~ swdio
    swd.swclk ~ swclk
    swd.swo ~ swo
    swd.gnd ~ gnd

    # Power interface connections
    power.vcc ~ vcc
    power.gnd ~ gnd

component BypassCap from Capacitor:
    footprint = "C0402"

component BypassCap100nF from BypassCap:
    value = 100nF +/- 10%

component BypassCap1uF from BypassCap:
    value = 1uF +/- 10%

component PullupResistor from Resistor:
    value = 10kohms +/- 10%
    footprint = "R0402"

    power = new Power
    p1 ~ power.vcc

    signal io
    p2 ~ io

module Oscillator:
    signal input
    signal output
    signal gnd
    osc = new ABM8272T3

    input ~ osc.in
    gnd ~ osc.gnd

    # output resistor
    r_osc = new Resistor
    r_osc.value = 1kohms +/- 5%
    r_osc.package = "0402"
    output ~ r_osc.p1; r_osc.p2 ~ osc.out

    # load caps
    c_osc_1 = new Capacitor
    c_osc_1.value = 15pF +/- 10%
    c_osc_1.package = "0402"
    c_osc_2 = new Capacitor
    c_osc_2.value = 15pF +/- 10%
    c_osc_2.package = "0402"

    input ~ c_osc_1.p1; c_osc_1.p2 ~ gnd
    osc.out ~ c_osc_2.p1; c_osc_2.p2 ~ gnd

component TestPointD1:
    footprint = "TestPoint_Pad_D1.0mm"
    designator_prefix = "T"
    do_not_populate = True

    signal io
    io ~ pin 1

component LED:
    signal cathode ~ pin 1
    signal anode ~ pin 2
    designator_prefix = "LED"
    footprint = "LED_SMD:LED_0402_1005Metric"

module LEDIndicator:
    power = new Power
    signal input
    signal gnd
    resistor = new Resistor
    led = new LED
    resistor.package = "0402"

    # Connect power
    power.vcc ~ input
    power.gnd ~ gnd

    # Connect up
    input ~ led.anode; led.cathode ~ resistor.p1; resistor.p2 ~ gnd

module LEDIndicatorRed from LEDIndicator:
    resistor.value = 330ohms +/- 5%
    led.mpn = "16-213SDRC/S530-A3/TR8"

module LEDIndicatorGreen from LEDIndicator:
    resistor.value = 220ohms +/- 5%
    led.mpn = "16-213SYGC/S530-E3/TR8"

module LEDIndicatorAmber from LEDIndicator:
    resistor.value = 330ohms +/- 5%
    led.mpn = "16-213/S2C-BM2P1VY/3T(XY)"

module VoltageDivider5v0To3v3:
    power_5v0 = new Power
    power_3v3 = new Power

    r1 = new Resistor
    r2 = new Resistor

    r1.value = 5.6kohm +/- 1%
    r2.value = 10kohm +/- 1%

    r1.package = "0402"
    r2.package = "0402"

    power_5v0.vcc ~ r1.p1
    power_3v3.vcc ~ r2.p1
    r1.p2 ~ r2.p1
    r2.p2 ~ power_5v0.gnd
    r2.p2 ~ power_3v3.gnd

component _RP2040:
    datasheet = "https://datasheets.raspberrypi.org/rp2040/rp2040-datasheet.pdf"
    description = "Microcontroller in QFN Package"
    footprint = "QFN40P700X700X90-57N-D"
    manufacturer = "RASPBERRY-PI"
    mpn = "RP2040"

    """Signals"""
    signal adc_avdd ~ pin 43
    signal dvdd ~ pin 23
    dvdd ~ pin 50
    signal iovdd ~ pin 1
    iovdd ~ pin 10
    iovdd ~ pin 22
    iovdd ~ pin 33
    iovdd ~ pin 42
    iovdd ~ pin 49
    signal usb_vdd ~ pin 48
    signal vreg_vin ~ pin 44
    signal vreg_vout ~ pin 45
    signal gnd ~ pin 57

    signal xin ~ pin 20
    signal xout ~ pin 21

    signal qspi_sclk ~ pin 52
    signal qspi_sd0 ~ pin 53
    signal qspi_sd1 ~ pin 55
    signal qspi_sd2 ~ pin 54
    signal qspi_sd3 ~ pin 51
    signal qspi_ss_n ~ pin 56

    signal run ~ pin 26
    signal swclk ~ pin 24
    signal swdio ~ pin 25
    signal testen ~ pin 19

    signal usb_dm ~ pin 46
    signal usb_dp ~ pin 47

    signal gpio0 ~ pin 2
    signal gpio1 ~ pin 3
    signal gpio2 ~ pin 4
    signal gpio3 ~ pin 5
    signal gpio4 ~ pin 6
    signal gpio5 ~ pin 7
    signal gpio6 ~ pin 8
    signal gpio7 ~ pin 9
    signal gpio8 ~ pin 11
    signal gpio9 ~ pin 12
    signal gpio10 ~ pin 13
    signal gpio11 ~ pin 14
    signal gpio12 ~ pin 15
    signal gpio13 ~ pin 16
    signal gpio14 ~ pin 17
    signal gpio15 ~ pin 18
    signal gpio16 ~ pin 27
    signal gpio17 ~ pin 28
    signal gpio18 ~ pin 29
    signal gpio19 ~ pin 30
    signal gpio20 ~ pin 31
    signal gpio21 ~ pin 32
    signal gpio22 ~ pin 34
    signal gpio23 ~ pin 35
    signal gpio24 ~ pin 36
    signal gpio25 ~ pin 37
    signal gpio26_a0 ~ pin 38
    signal gpio27_a1 ~ pin 39
    signal gpio28_a2 ~ pin 40
    signal gpio29_a3 ~ pin 41

    # The TESTEN pin is used for factory testing and should be tied to GND
    gnd ~ testen

    # IOVDD is a nominal 3v3
    power_3v3 = new Power
    power_3v3.vcc ~ iovdd
    power_3v3.vcc ~ adc_avdd
    power_3v3.vcc ~ usb_vdd
    power_3v3.gnd ~ gnd

    # DVDD is a nominal 1v1
    power_1v1 = new Power
    power_1v1.vcc ~ dvdd
    power_1v1.gnd ~ gnd

    vreg_vin ~ power_3v3.vcc
    vreg_vout ~ power_1v1.vcc

    # QSPI interface
    qspi = new QSPI
    qspi.cs ~ qspi_ss_n
    qspi.sck ~ qspi_sclk
    qspi.io0 ~ qspi_sd0
    qspi.io1 ~ qspi_sd1
    qspi.io2 ~ qspi_sd2
    qspi.io3 ~ qspi_sd3

    # USB interface
    usb2 = new USB2
    usb2.dp ~ usb_dp
    usb2.dm ~ usb_dm

    # SWD interface
    swd = new SWD
    swd.swclk ~ swclk
    swd.swdio ~ swdio
    swd.gnd ~ gnd
